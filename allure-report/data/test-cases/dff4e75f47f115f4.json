{
  "uid" : "dff4e75f47f115f4",
  "name" : "test_crud_fleetOnwer",
  "fullName" : "tests.test_User.TestUsers#test_crud_fleetOnwer",
  "historyId" : "cc29d7d73804ca54d9a668add6b31ee4",
  "time" : {
    "start" : 1591948627137,
    "stop" : 1591948642313,
    "duration" : 15176
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 'Duplicate email' == 'Fleet owner user added successfully.'\n  - Duplicate email\n  + Fleet owner user added successfully.",
  "statusTrace" : "self = <tests.test_User.TestUsers instance at 0x10c9edea8>\n\n    def test_crud_fleetOnwer(self):\n        TestUsers.users.click_on_button(TestUsers.users.usersMenu)\n        TestUsers.users.click_on_button(TestUsers.users.fleetOwnerTab)\n        TestUsers.users.click_on_button(TestUsers.users.addFleetAdminButton)\n        TestUsers.users.enter_text(TestUsers.users.nameText, self.configfileParser(\"UserName\"))\n        TestUsers.users.enter_text(TestUsers.users.emailIDText, self.configfileParser(\"UserEmailId\"))\n        TestUsers.users.click_on_button(TestUsers.users.addButton)\n>       assert (TestUsers.users.get_text(TestUsers.users.alertDialog) == \"Fleet owner user added successfully.\")\nE       AssertionError: assert 'Duplicate email' == 'Fleet owner user added successfully.'\nE         - Duplicate email\nE         + Fleet owner user added successfully.\n\ntests/test_User.py:44: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "test_navigateToUsersMenu",
    "time" : {
      "start" : 1591948606442,
      "stop" : 1591948611458,
      "duration" : 5016
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup",
    "time" : {
      "start" : 1591948497854,
      "stop" : 1591948547803,
      "duration" : 49949
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "setup::0",
    "time" : {
      "start" : 1591948684147,
      "stop" : 1591948684252,
      "duration" : 105
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "suite",
    "value" : "test_User"
  }, {
    "name" : "subSuite",
    "value" : "TestUsers"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "host",
    "value" : "tml.local"
  }, {
    "name" : "thread",
    "value" : "1726-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython2"
  }, {
    "name" : "package",
    "value" : "tests.test_User"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "dff4e75f47f115f4.json",
  "parameterValues" : [ ]
}